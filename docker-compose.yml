version: '3.8'

services:
  orchestrator:
    build: .
    ports:
      - "5000:5000"
    environment:
      - SERVICE_TYPE=orchestrator
      - AWS_REGION=us-east-1
      - PRICING_SERVICE_URL=http://pricing:5000
      - PREDICTION_SERVICE_URL=http://prediction:5000
      - PORT=5000
    depends_on:
      - pricing
      - prediction
    networks:
      - mortgage-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  pricing:
    build: .
    ports:
      - "5001:5000"
    environment:
      - SERVICE_TYPE=pricing
      - AWS_REGION=us-east-1
      - MODEL_BUCKET=mortgage-ml-models
      - PORT=5000
    networks:
      - mortgage-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  prediction:
    build: .
    ports:
      - "5002:5000"
    environment:
      - SERVICE_TYPE=prediction
      - AWS_REGION=us-east-1
      - MODEL_BUCKET=mortgage-ml-models
      - PORT=5000
    networks:
      - mortgage-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  model-training:
    build: .
    ports:
      - "5003:5000"
    environment:
      - SERVICE_TYPE=model_training
      - AWS_REGION=us-east-1
      - MODEL_BUCKET=mortgage-ml-models
      - PORT=5000
    networks:
      - mortgage-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  dashboard:
    build: .
    ports:
      - "5004:5000"
    environment:
      - SERVICE_TYPE=dashboard
      - AWS_REGION=us-east-1
      - PORT=5000
    networks:
      - mortgage-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - mortgage-network
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

  # LocalStack for local AWS development
  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,dynamodb,lambda,events,sns,logs,cloudwatch
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - localstack-data:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - mortgage-network

networks:
  mortgage-network:
    driver: bridge

volumes:
  redis-data:
  localstack-data: