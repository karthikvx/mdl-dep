# Complete Infrastructure as Code for ML Monitoring
# infrastructure/cloudformation/ml-monitoring-stack.yaml

AWSTemplateFormatVersion: '2010-09-09'
Description: 'Comprehensive ML Model Monitoring and Alerting Infrastructure'

Parameters:
  EnvironmentName:
    Type: String
    Default: production
    AllowedValues: [development, staging, production]
  
  AlertEmail:
    Type: String
    Description: Email for critical alerts
  
  SlackWebhookUrl:
    Type: String
    Description: Slack webhook URL for notifications
    NoEcho: true

Resources:
  # DynamoDB Tables for Model Registry and Tracking
  ModelRegistryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${EnvironmentName}-ModelRegistry'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: model_type
          AttributeType: S
        - AttributeName: version
          AttributeType: S
        - AttributeName: created_at
          AttributeType: S
      KeySchema:
        - AttributeName: model_type
          KeyType: HASH
        - AttributeName: version
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: StatusIndex
          KeySchema:
            - AttributeName: model_type
              KeyType: HASH
            - AttributeName: created_at
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true

  ExperimentResultsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${EnvironmentName}-ExperimentResults'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: experiment_id
          AttributeType: S
        - AttributeName: start_time
          AttributeType: S
      KeySchema:
        - AttributeName: experiment_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: TimeIndex
          KeySchema:
            - AttributeName: start_time
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  ModelPerformanceTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${EnvironmentName}-ModelPerformance'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: model_version
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: S
      KeySchema:
        - AttributeName: model_version
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  # S3 Buckets for ML Artifacts
  MLModelsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${EnvironmentName}-mortgage-ml-models-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            NoncurrentVersionExpirationInDays: 90
          - Id: IntelligentTiering
            Status: Enabled
            Transitions:
              - TransitionInDays: 30
                StorageClass: INTELLIGENT_TIERING
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      NotificationConfiguration:
        CloudWatchConfigurations:
          - Event: s3:ObjectCreated:*
            CloudWatchConfiguration:
              LogGroupName: !Ref MLModelLogGroup

  # CloudWatch Resources
  MLModelLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${EnvironmentName}-ml-models'
      RetentionInDays: 30

  ModelPerformanceDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub '${EnvironmentName}-ML-Model-Performance'
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "MortgageApp/MLModels", "accuracy", "ModelVersion", "ALL" ],
                  [ ".", "precision", ".", "." ],
                  [ ".", "recall", ".", "." ],
                  [ ".", "f1_score", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Model Performance Metrics",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "MortgageApp/MLModels", "prediction_latency", "ModelVersion", "ALL" ],
                  [ ".", "feature_drift", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Model Operational Metrics",
                "period": 300
              }
            },
            {
              "type": "metric",
              "x": 0,
              "y": 6,
              "width": 24,
              "height": 6,
              "properties": {
                "metrics": [
                  [ "AWS/Lambda", "Duration", "FunctionName", "${EnvironmentName}-loan-pricing" ],
                  [ ".", "Errors", ".", "." ],
                  [ ".", "Throttles", ".", "." ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "region": "${AWS::Region}",
                "title": "Lambda Function Performance",
                "period": 300
              }
            }
          ]
        }

  # CloudWatch Alarms
  ModelAccuracyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${EnvironmentName}-ML-Model-Low-Accuracy'
      AlarmDescription: 'Alert when model accuracy drops below threshold'
      MetricName: accuracy
      Namespace: MortgageApp/MLModels
      Statistic: Average
      Period: 300
      EvaluationPeriods: 3
      Threshold: 0.85
      ComparisonOperator: LessThanThreshold
      AlarmActions:
        - !Ref CriticalAlertsTopic
      TreatMissingData: breaching

  FeatureDriftAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${EnvironmentName}-ML-Feature-Drift-High'
      AlarmDescription: 'Alert when feature drift is detected'
      MetricName: feature_drift
      Namespace: MortgageApp/MLModels
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 2.0
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref WarningAlertsTopic

  PredictionLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${EnvironmentName}-ML-High-Latency'
      AlarmDescription: 'Alert when prediction latency is too high'
      MetricName: prediction_latency
      Namespace: MortgageApp/MLModels
      Statistic: Average
      Period: 300
      EvaluationPeriods: 3
      Threshold: 1000
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref WarningAlertsTopic

  # SNS Topics for Alerts
  CriticalAlertsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub '${EnvironmentName}-ml-critical-alerts'
      DisplayName: 'ML Critical Alerts'

  WarningAlertsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub '${EnvironmentName}-ml-warning-alerts'
      DisplayName: 'ML Warning Alerts'

  # Email Subscriptions
  CriticalEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref CriticalAlertsTopic
      Protocol: email
      Endpoint: !Ref AlertEmail

  WarningEmailSubscription:
    Type: AWS